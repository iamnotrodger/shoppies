{"version":3,"sources":["action/movieActions.js","action/nomineeActions.js","component/LoadingScreen/LoadingScreen.js","component/Movie/Movie.js","component/MovieList/MovieList.js","component/NominationBanner/NominationBanner.js","component/NominationList/NominationList.js","hook/useDebounce.js","component/Search/SearchIcon.js","component/Search/Search.js","App.js","reducer/movieReducer.js","reducer/nomineeReducer.js","reducer/index.js","reportWebVitals.js","index.js"],"names":["MOVIE_ACTION","searchMovies","search","a","fetch","process","response","ok","json","Search","NOMINEE_ACTION","LoadingScreen","loading","CSSTransition","in","unmountOnExit","timeout","classNames","className","Movie","value","disabled","btnTxt","onClick","Title","Year","Poster","style","backgroundImage","defaultProps","isNominated","movie","nominees","length","findIndex","nominee","imdbID","MovieList","useSelector","state","movies","dispatch","useDispatch","handleClick","type","payload","addNominee","TransitionGroup","map","appear","enter","exit","NominationBanner","useState","open","setOpen","useEffect","closeBanner","NominationList","height","setHeight","ref","useRef","headerHeight","current","children","offsetHeight","listHeight","deleteNominee","addHeight","el","subtractHeight","onEnter","onExit","useDebounce","callback","delay","useCallback","debounce","SearchIcon","width","viewBox","fill","xmlns","clipPath","fillRule","clipRule","d","id","fetchMoviesDebounce","fetchMovies","trim","error","console","log","cancel","onChange","event","target","placeholder","autoFocus","App","initialState","movieReducer","action","Object","assign","loadNominee","JSON","parse","window","localStorage","getItem","updateLocalStorage","setItem","stringify","push","filter","nomineeReducer","addedState","deletedState","reducer","combineReducers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcfed8b6.chunk.js","sourcesContent":["export const MOVIE_ACTION = {\n    FETCH_PENDING: 'MOVIE_FETCH_PENDING',\n    FETCH_SUCCESS: 'MOVIE_FETCH_SUCCESS',\n    FETCH_ERROR: 'MOVIE_FETCH_ERROR',\n};\n\nexport const fetchMovies = (search) => async (dispatch) => {\n    dispatch({\n        type: MOVIE_ACTION.FETCH_PENDING,\n    });\n    try {\n        const movies = await searchMovies(search);\n        dispatch({\n            type: MOVIE_ACTION.FETCH_SUCCESS,\n            payload: { movies, search },\n        });\n    } catch (error) {\n        dispatch({\n            type: MOVIE_ACTION.FETCH_ERROR,\n            payload: error,\n        });\n    }\n};\n\nconst searchMovies = async (search) => {\n    if (search) {\n        const response = await fetch(\n            `${process.env.REACT_APP_API_URL}&s=${search}&type=movie`,\n        );\n\n        if (response.ok) {\n            const { Search } = await response.json();\n            return Search || [];\n        }\n    }\n    return [];\n};\n","export const NOMINEE_ACTION = {\n    ADD: 'ADD_NOMINEE',\n    DELETE: 'DELETE_NOMINEE',\n};\n\nexport const addNominee = (movie) => {\n    return {\n        type: NOMINEE_ACTION.ADD,\n        payload: movie,\n    };\n};\n\nexport const deleteNominee = (movie) => {\n    return {\n        type: NOMINEE_ACTION.DELETE,\n        payload: movie,\n    };\n};\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './LoadingScreen.css';\n\nconst LoadingScreen = ({ loading }) => {\n    return (\n        <CSSTransition\n            in={loading}\n            unmountOnExit\n            timeout={1000}\n            classNames='load'>\n            <div className='loading-screen'>\n                <div className='loading-screen__content'>\n                    <div className='loading-screen__ball'></div>\n                    <div className='loading-screen__text'>LOADING</div>\n                </div>\n            </div>\n        </CSSTransition>\n    );\n};\n\nexport default LoadingScreen;\n","import React from 'react';\n\nimport './Movie.css';\n\nconst Movie = ({ value, className, disabled, btnTxt, onClick }) => {\n    const { Title, Year, Poster } = value;\n\n    return (\n        <div className={`movie ${className}`}>\n            <div\n                className='movie__poster'\n                style={{ backgroundImage: `url(${Poster})` }}\n            />\n            <div className='movie__info'>\n                <h3 className='movie__title'>{Title}</h3>\n                <p className='movie__year'>{Year}</p>\n            </div>\n\n            <button\n                disabled={disabled}\n                className='movie__button'\n                onClick={onClick}>\n                {btnTxt || 'Click Me'}\n            </button>\n        </div>\n    );\n};\n\nMovie.defaultProps = {\n    disabled: false,\n    className: '',\n};\n\nexport default Movie;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { addNominee } from '../../action';\nimport LoadingScreen from '../LoadingScreen';\nimport Movie from '../Movie/Movie';\n\nconst MovieList = () => {\n    const { movies, search, loading } = useSelector((state) => state.movie);\n    const nominees = useSelector((state) => state.nominees);\n    const dispatch = useDispatch();\n\n    const handleClick = (movie) => {\n        dispatch(addNominee(movie));\n    };\n\n    return (\n        <div className='movie-container'>\n            <h2 className='movie-container__header'>{`Results for \"${search}\"`}</h2>\n            <TransitionGroup className='movie-container__list'>\n                {movies.map((movie) => (\n                    <CSSTransition\n                        key={movie.imdbID}\n                        timeout={{ appear: 500, enter: 500, exit: 250 }}\n                        classNames='movie-transition'>\n                        <Movie\n                            value={movie}\n                            disabled={isNominated(movie, nominees)}\n                            onClick={() => handleClick(movie)}\n                            btnTxt='Nominate'\n                        />\n                    </CSSTransition>\n                ))}\n            </TransitionGroup>\n            <LoadingScreen loading={loading} />\n        </div>\n    );\n};\n\nconst isNominated = (movie, nominees) => {\n    if (nominees.length < 5) {\n        const index = nominees.findIndex(\n            // eslint-disable-next-line eqeqeq\n            (nominee) => nominee.imdbID == movie.imdbID,\n        );\n        return index > -1;\n    }\n\n    return true;\n};\n\nexport default MovieList;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './NominationBanner.css';\n\nconst NominationBanner = () => {\n    const [open, setOpen] = useState(false);\n    const nominees = useSelector((state) => state.nominees);\n\n    useEffect(() => {\n        if (nominees.length >= 5) setOpen(true);\n        else setOpen(false);\n    }, [nominees]);\n\n    const closeBanner = () => {\n        setOpen(false);\n    };\n\n    return (\n        <CSSTransition\n            in={open}\n            timeout={500}\n            unmountOnExit\n            classNames='banner'>\n            <div className='nomination-banner' onClick={closeBanner}>\n                <div className='nomination-banner__content'>\n                    <h2 className='nomination-banner__title'>Good job!</h2>\n                    <h3 className='nomination-banner__subtitle'>\n                        Nominated five movies.\n                    </h3>\n                    <button\n                        className='nomination-banner__button'\n                        onClick={closeBanner}>\n                        Got it\n                    </button>\n                </div>\n            </div>\n        </CSSTransition>\n    );\n};\n\nexport default NominationBanner;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { deleteNominee } from '../../action';\nimport Movie from '../Movie';\n\nconst NominationList = () => {\n    const [height, setHeight] = useState(null);\n    const ref = useRef(null);\n\n    const nominees = useSelector((state) => state.nominees);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const headerHeight = ref.current.children[0].offsetHeight;\n        const listHeight = ref.current.children[1].offsetHeight;\n\n        setHeight(headerHeight + listHeight + 60);\n    }, []);\n\n    const handleClick = (movie) => {\n        dispatch(deleteNominee(movie));\n    };\n\n    const addHeight = (el) => {\n        setHeight(height + el.offsetHeight + 15);\n    };\n\n    const subtractHeight = (el) => {\n        setHeight(height - el.offsetHeight - 15);\n    };\n\n    return (\n        <div className='movie-container' style={{ height }} ref={ref}>\n            <h2 className='movie-container__header'>Nominations</h2>\n            <TransitionGroup className='movie-container__list'>\n                {nominees.map((movie) => (\n                    <CSSTransition\n                        key={movie.imdbID}\n                        timeout={{ appear: 500, enter: 500, exit: 250 }}\n                        classNames='movie-transition'\n                        onEnter={addHeight}\n                        onExit={subtractHeight}>\n                        <Movie\n                            className='movie--error'\n                            value={movie}\n                            onClick={() => handleClick(movie)}\n                            btnTxt='Remove'\n                        />\n                    </CSSTransition>\n                ))}\n            </TransitionGroup>\n        </div>\n    );\n};\n\nexport default NominationList;\n","import { debounce } from 'lodash';\nimport { useCallback } from 'react';\n\nconst useDebounce = (callback, delay) => {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const debounceFunction = useCallback(\n        debounce((...args) => callback(...args), delay),\n        [callback, delay],\n    );\n    return debounceFunction;\n};\n\nexport default useDebounce;\n","import React from 'react';\n\nconst SearchIcon = () => {\n    return (\n        <svg\n            width='16'\n            height='16'\n            viewBox='0 0 16 16'\n            fill='currentColor'\n            xmlns='http://www.w3.org/2000/svg'>\n            <g\n                clipPath='url(#sm-solid-search_svg__clip0)'\n                fillRule='evenodd'\n                clipRule='evenodd'>\n                <path d='M7.212 1.803a5.409 5.409 0 100 10.818 5.409 5.409 0 000-10.818zM0 7.212a7.212 7.212 0 1114.424 0A7.212 7.212 0 010 7.212z'></path>\n                <path d='M11.03 11.03a.901.901 0 011.275 0l3.43 3.432a.902.902 0 01-1.274 1.275l-3.431-3.431a.901.901 0 010-1.275z'></path>\n            </g>\n            <defs>\n                <clipPath id='sm-solid-search_svg__clip0'>\n                    <path d='M0 0h16v16H0z'></path>\n                </clipPath>\n            </defs>\n        </svg>\n    );\n};\n\nexport default SearchIcon;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchMovies } from '../../action';\nimport useDebounce from '../../hook/useDebounce';\nimport SearchIcon from './SearchIcon';\n\nimport './Search.css';\n\nconst Search = () => {\n    const dispatch = useDispatch();\n\n    const fetchMoviesDebounce = useDebounce((search) => {\n        try {\n            dispatch(fetchMovies(search.trim()));\n        } catch (error) {\n            console.log(error);\n        }\n    }, 500);\n\n    useEffect(() => {\n        return fetchMoviesDebounce.cancel();\n    }, [fetchMoviesDebounce]);\n\n    const handleChange = (event) => {\n        const { value } = event.target;\n        fetchMoviesDebounce(value);\n    };\n\n    return (\n        <div className='search'>\n            <h3 className='search__header'>Movie Title</h3>\n            <div className='search__bar'>\n                <div className='search__icon'>\n                    <SearchIcon />\n                </div>\n                <input\n                    type='text'\n                    className='search__input'\n                    onChange={handleChange}\n                    placeholder='Search for a movie title'\n                    autoFocus\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Search;\n","import React from 'react';\nimport MovieList from './component/MovieList/MovieList';\nimport NominationBanner from './component/NominationBanner';\nimport NominationList from './component/NominationList';\nimport Search from './component/Search';\n\nimport './App.css';\n\nconst App = () => {\n    return (\n        <div className='app'>\n            <header className='app__header'>\n                <h1 className='app__title'>The Shoppies</h1>\n                <Search />\n            </header>\n            <main className='main'>\n                <MovieList />\n                <NominationList />\n            </main>\n            <NominationBanner />\n        </div>\n    );\n};\n\nexport default App;\n","import { MOVIE_ACTION } from '../action';\n\nconst initialState = {\n    movies: [],\n    loading: false,\n    error: '',\n    search: '',\n};\n\nconst movieReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case MOVIE_ACTION.FETCH_PENDING:\n            return Object.assign({}, state, { loading: true });\n\n        case MOVIE_ACTION.FETCH_SUCCESS:\n            return Object.assign({}, state, {\n                movies: action.payload.movies,\n                search: action.payload.search,\n                loading: false,\n            });\n\n        case MOVIE_ACTION.FETCH_ERROR:\n            return Object.assign({}, state, {\n                search: '',\n                movies: [],\n                error: action.payload,\n                loading: false,\n            });\n        default:\n            return state;\n    }\n};\n\nexport default movieReducer;\n","import { NOMINEE_ACTION } from '../action';\n\nconst loadNominee = () => {\n    let nominees = JSON.parse(window.localStorage.getItem('nominees'));\n    if (!nominees) nominees = [];\n    return nominees;\n};\n\nconst updateLocalStorage = (nominees) => {\n    window.localStorage.setItem('nominees', JSON.stringify(nominees));\n};\n\nconst addNominee = (nominees, movie) => {\n    if (nominees.length < 5) {\n        const index = nominees.findIndex(\n            // eslint-disable-next-line eqeqeq\n            (nominee) => nominee.imdbID == movie.imdbID,\n        );\n\n        if (index < 0) nominees.push(movie);\n    }\n    return [...nominees];\n};\n\nconst deleteNominee = (nominees, movie) => {\n    // eslint-disable-next-line eqeqeq\n    return nominees.filter((nominee) => nominee.imdbID !== movie.imdbID);\n};\n\nconst nomineeReducer = (state = loadNominee(), action) => {\n    switch (action.type) {\n        case NOMINEE_ACTION.ADD:\n            const addedState = addNominee(state, action.payload);\n            updateLocalStorage(addedState);\n            return addedState;\n\n        case NOMINEE_ACTION.DELETE:\n            const deletedState = deleteNominee(state, action.payload);\n            updateLocalStorage(deletedState);\n            return deletedState;\n\n        default:\n            return state;\n    }\n};\n\nexport default nomineeReducer;\n","import { combineReducers } from 'redux';\nimport movieReducer from './movieReducer';\nimport nomineeReducer from './nomineeReducer';\n\nconst reducer = combineReducers({\n    movie: movieReducer,\n    nominees: nomineeReducer,\n});\n\nexport default reducer;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport App from './App';\nimport './index.css';\nimport reducer from './reducer';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}